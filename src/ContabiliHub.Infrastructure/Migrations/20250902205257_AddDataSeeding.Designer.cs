// <auto-generated />
using System;
using ContabiliHub.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContabiliHub.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250902205257_AddDataSeeding")]
    partial class AddDataSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContabiliHub.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            CPF = "11144477735",
                            DataCadastro = new DateTime(2025, 1, 10, 9, 15, 0, 0, DateTimeKind.Utc),
                            Email = "maria.silva@email.com",
                            Endereco = "Rua das Flores, 123 - Centro, São Paulo - SP",
                            NomeCompleto = "Maria Silva Santos",
                            Telefone = "11987654321"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            CPF = "52998224725",
                            DataCadastro = new DateTime(2025, 1, 15, 14, 20, 0, 0, DateTimeKind.Utc),
                            Email = "joao.oliveira@email.com",
                            Endereco = "Av. Paulista, 456 - Bela Vista, São Paulo - SP",
                            NomeCompleto = "João Carlos Oliveira",
                            Telefone = "11976543210"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            CPF = "12345678909",
                            DataCadastro = new DateTime(2025, 1, 20, 11, 45, 0, 0, DateTimeKind.Utc),
                            Email = "ana.costa@email.com",
                            Endereco = "Rua Augusta, 789 - Consolação, São Paulo - SP",
                            NomeCompleto = "Ana Paula Costa",
                            Telefone = "11965432109"
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            CPF = "98765432100",
                            DataCadastro = new DateTime(2025, 1, 25, 16, 10, 0, 0, DateTimeKind.Utc),
                            Email = "pedro.lima@email.com",
                            Endereco = "Rua Oscar Freire, 321 - Jardins, São Paulo - SP",
                            NomeCompleto = "Pedro Henrique Lima",
                            Telefone = "11954321098"
                        });
                });

            modelBuilder.Entity("ContabiliHub.Domain.Entities.ServicoPrestado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataPrestacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("ServicosPrestados");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            ClienteId = new Guid("33333333-3333-3333-3333-333333333333"),
                            DataPrestacao = new DateTime(2025, 2, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Descricao = "Declaração de Imposto de Renda 2024",
                            Pago = true,
                            Valor = 180.00m
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            ClienteId = new Guid("33333333-3333-3333-3333-333333333333"),
                            DataPrestacao = new DateTime(2025, 2, 15, 14, 30, 0, 0, DateTimeKind.Utc),
                            Descricao = "Consultoria Contábil - Abertura MEI",
                            Pago = true,
                            Valor = 120.00m
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            ClienteId = new Guid("44444444-4444-4444-4444-444444444444"),
                            DataPrestacao = new DateTime(2025, 2, 5, 9, 15, 0, 0, DateTimeKind.Utc),
                            Descricao = "Declaração de Imposto de Renda 2024",
                            Pago = false,
                            Valor = 200.00m
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            ClienteId = new Guid("55555555-5555-5555-5555-555555555555"),
                            DataPrestacao = new DateTime(2025, 2, 10, 15, 45, 0, 0, DateTimeKind.Utc),
                            Descricao = "Organização de Documentos Fiscais",
                            Pago = true,
                            Valor = 350.00m
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            ClienteId = new Guid("55555555-5555-5555-5555-555555555555"),
                            DataPrestacao = new DateTime(2025, 2, 20, 11, 20, 0, 0, DateTimeKind.Utc),
                            Descricao = "Consultoria Tributária - Planejamento",
                            Pago = false,
                            Valor = 500.00m
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            ClienteId = new Guid("66666666-6666-6666-6666-666666666666"),
                            DataPrestacao = new DateTime(2025, 2, 25, 16, 0, 0, 0, DateTimeKind.Utc),
                            Descricao = "Declaração de Imposto de Renda 2024",
                            Pago = false,
                            Valor = 220.00m
                        });
                });

            modelBuilder.Entity("ContabiliHub.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CriadoEm = new DateTime(2025, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@contabilihub.com",
                            NomeCompleto = "Administrador ContabiliHub",
                            SenhaHash = "JAvlGPq9JyTdtvBO6x2llnRI1+gxwIyPqCKAn3THIKk="
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CriadoEm = new DateTime(2025, 1, 15, 14, 30, 0, 0, DateTimeKind.Utc),
                            Email = "demo@contabilihub.com",
                            NomeCompleto = "Demo ContabiliHub",
                            SenhaHash = "062TFbe+XdU7MaJzs7Orpd7+cAgIMFqhajBit2ZYp5E="
                        });
                });

            modelBuilder.Entity("ContabiliHub.Domain.Entities.ServicoPrestado", b =>
                {
                    b.HasOne("ContabiliHub.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
